{"version":3,"sources":["todoList/stores.js","todoList/store/TodoListStore.js","todoList/view/InputView.js","todoList/container/InputContainer.js","todoList/view/ListView.js","todoList/container/ListContainer.js","todoList/container/TodoListContainer.js","todoList/Routes.js","stores.js","layout/component/Layout.js","Routes.js","App.js","index.js"],"names":["todoListStore","this","_todoList","slice","observable","computed","action","name","value","inputValue","length","onActionSetter","todoList","concat","text","checked","id","alert","filter","row","i","InputView","observer","props","addTodo","className","onChange","e","target","Button","onClick","Component","InputContainer","inject","a","ListView","onToggle","onRemove","stopPropagation","ListContainer","style","height","overflowY","map","index","nextId","TodoListContainer","Routes","exact","path","render","Layout","state","visible","sidebarList","iconName","link","setVisible","flag","setState","undefined","Header","as","color","Subheader","Icon","Sidebar","Pushable","Segment","Menu","animation","icon","inverted","onHide","vertical","width","Item","Link","to","Pusher","dimmed","basename","App","stores","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.91a44be2.chunk.js","sourcesContent":["import TodoListStore from \"./store/TodoListStore\";\n\nexport default {\n    todoListStore: new TodoListStore(),\n};","import {observable, action, computed} from 'mobx';\n\nclass TodoListStore {\n    @observable inputValue = '';\n    @observable _todoList = [];\n\n    @computed\n    get todoList() {\n        return this._todoList ? this._todoList.slice() : [];\n    }\n\n    @action\n    onActionSetter = (name, value) => {\n        this[name] = value;\n    }\n\n    @action\n    addTodo = () => {\n        if(this.inputValue.length === 0) {\n            alert('할일을 입력하세요.');\n            return;\n        }\n        this.onActionSetter('_todoList', this.todoList.concat([{text: this.inputValue, checked: false, id: this.todoList.length}]));\n    }\n\n    @action\n    onToggle = (id) => {\n        this._todoList[id] = {\n            ...this._todoList[id],\n            checked: !this._todoList[id].checked\n        }\n    }\n\n    @action\n    onRemove = (id) => {\n        let todoList = this.todoList.concat().filter(row => row.id !== id);\n\n        for (let i = 0; i < todoList.length; i++) {\n            todoList[i] = {...todoList[i], id: i};\n        }\n\n        this.onActionSetter('_todoList', todoList);\n    }\n\n}\n\nexport default TodoListStore;","import React, { Component } from 'react';\nimport {Button, Input} from \"semantic-ui-react\";\nimport {observer} from \"mobx-react\";\n\n@observer\nclass InputView extends Component {\n\n    render() {\n\n        const { inputValue, onActionSetter, addTodo } = this.props;\n\n        return (\n            <div className=\"form\">\n                <input\n                    value={inputValue}\n                    onChange={(e) => onActionSetter('inputValue', e.target.value)}\n                />\n                <Button className=\"create-button\" onClick={addTodo}>추가</Button>\n            </div>\n        );\n    }\n\n}\n\nexport default InputView;","import React, { Component } from 'react';\nimport { observer, inject } from \"mobx-react\";\nimport InputView from \"../view/InputView\";\n\n@inject('todoListStore')\n@observer\nclass InputContainer extends Component {\n\n    addTodo = async () => {\n        const { todoListStore } = this.props;\n\n        await todoListStore.addTodo();\n        await todoListStore.onActionSetter('inputValue', '');\n    }\n\n    render() {\n\n        const {todoListStore} = this.props;\n\n        return (\n            <InputView\n              inputValue={todoListStore.inputValue}\n              onActionSetter={todoListStore.onActionSetter}\n              addTodo={this.addTodo}\n            />\n        );\n    }\n}\n\nexport default InputContainer;","import React, {Component} from 'react';\nimport {observer} from \"mobx-react\";\n\n@observer\nclass ListView extends Component {\n\n    render() {\n        const {text, checked, id, onToggle, onRemove} = this.props;\n\n        return (\n            <div\n                className=\"todo-item\"\n                onClick={() => onToggle(id)}>\n                <div\n                    className=\"remove\"\n                    onClick={(e) => {\n                        e.stopPropagation(); // onToggle 이 실행되지 않도록 함\n                        onRemove(id)\n                    }}\n                >&times;</div>\n\n                <div className={`todo-text ${checked && 'checked'}`}>\n                    <div>{text}</div>\n                </div>\n                {\n                    checked && (<div className=\"check-mark\">✓</div>)\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default ListView;","import React, { Component } from 'react';\nimport { observer, inject } from \"mobx-react\";\nimport ListView from \"../view/ListView\";\nimport nextId from \"react-id-generator\";\n\n@inject('todoListStore')\n@observer\nclass ListContainer extends Component {\n\n    render() {\n\n        const {todoListStore} = this.props;\n\n        return (\n            <div style={{height: '350px', overflowY: 'auto'}}>\n                {\n                    todoListStore.todoList.map((row, index) => (\n                        <ListView\n                            key={nextId('list')}\n                            text={row.text}\n                            checked={row.checked}\n                            id={row.id}\n                            onToggle={todoListStore.onToggle}\n                            onRemove={todoListStore.onRemove}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nexport default ListContainer;","import React, { Component } from 'react';\nimport { observer, inject } from \"mobx-react\";\n\nimport InputContainer from \"./InputContainer\";\n\nimport '../TodoList.css';\nimport ListContainer from \"./ListContainer\";\n\n@inject('todoListStore')\n@observer\nclass TodoListContainer extends Component {\n\n    render() {\n\n        const {todoListStore} = this.props;\n\n        return (\n            <div className=\"todo-list-template\">\n                <div className=\"title\">\n                    할일 리스트\n                </div>\n                <InputContainer\n                    inputValue={todoListStore.inputValue}\n                    onActionSetter={todoListStore.onActionSetter}\n                />\n                <ListContainer />\n            </div>\n        );\n    }\n}\n\nexport default TodoListContainer;","import React from \"react\";\nimport {Route, Switch} from 'react-router-dom';\n\nimport TodoListContainer from \"./container/TodoListContainer\";\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/todoList\" render={(props) => <TodoListContainer {...props} />} />\n    </Switch>\n)\n\nexport default Routes","import { stores as todoListStore } from './todoList';\n\nexport default {\n    ...todoListStore,\n};","import React, {Component} from 'react';\nimport {Header, Icon, Menu, Segment, Sidebar,} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport nextId from \"react-id-generator\";\n\nclass Layout extends Component {\n\n    state = {\n        visible: false,\n        sidebarList: [\n            {name: 'Home', iconName: 'home', link: ''},\n            {name: '할일 리스트', iconName: 'tasks', link: '/todoList'},\n        ],\n    }\n\n    setVisible = (flag) => {\n        this.setState({\n           visible: flag === undefined ? !this.state.visible : flag\n        });\n    }\n\n    render() {\n\n        return (\n          <div>\n              <Header\n                  as='h1'\n                  color='teal'\n                  className=\"layout-header\"\n              >\n                  리액트 공부\n                  <Header.Subheader><Icon name=\"bars\" onClick={() => this.setVisible()}/>개인적으로 하는 공부</Header.Subheader>\n              </Header>\n              <Sidebar.Pushable as={Segment}>\n                  <Sidebar\n                      as={Menu}\n                      animation='overlay'\n                      icon='labeled'\n                      inverted\n                      onHide={() => this.setVisible(false)}\n                      vertical\n                      visible={this.state.visible}\n                      width='thin'\n                  >\n                      {\n                          this.state.sidebarList.map(row => (\n                              <Menu.Item\n                                  as={Link}\n                                  to={row.link}\n                                  key={nextId('menuItem')}\n                                  onClick={() => this.setVisible(false)}\n                              >\n                                  <Icon name={row.iconName} />\n                                  {row.name}\n                              </Menu.Item>\n                          ))\n                      }\n                  </Sidebar>\n\n                  <Sidebar.Pusher dimmed={this.state.visible}>\n                      <div\n                          className=\"show-area\"\n                          {...this.props}\n                      />\n                  </Sidebar.Pusher>\n              </Sidebar.Pushable>\n          </div>\n        );\n    }\n\n}\n\nexport default Layout;","import React from 'react';\nimport {BrowserRouter, Switch} from \"react-router-dom\";\n\nimport { Layout } from './layout';\n\nimport {Routes as TodoListRoute} from './todoList';\n\nconst Routes = () => (\n    <BrowserRouter basename={\"react-study\"}>\n        <Layout>\n            <Switch>\n                <TodoListRoute />\n            </Switch>\n        </Layout>\n    </BrowserRouter>\n);\n\nexport default Routes;","import React, { Component } from 'react';\nimport { Provider } from \"mobx-react\";\n\nimport stores from './stores';\nimport Routes from \"./Routes\";\n\nimport 'semantic-ui-css/semantic.min.css'\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Provider\n                {...stores}\n            >\n                <Routes />\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '@/App';\n\nimport './index.css';\nimport './common/css/publicCss.css';\n\nReactDOM.render(<App />, document.getElementById('app'));"],"sourceRoot":""}